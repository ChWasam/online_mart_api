name: project-04
# 01  product service 
services:
  product:
    container_name: "product"
    hostname: "product"
    build:
      context: ./product_service
      dockerfile: Dockerfile.dev
    depends_on:
      - broker
      - postgres_db_product
    ports:
      - "8001:8001" # Expose container port 8001 to host port 8001
    volumes:
      - ./product_service:/code/

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

# 01  postgres_db for product  service 

  postgres_db_product:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresCont_product
    environment:
      - POSTGRES_USER=wasam
      - POSTGRES_PASSWORD=wasam_password
      - POSTGRES_DB=wasam_database_product
    ports:
      - "5433:5432"
    volumes:
      - postgres_db_product:/var/lib/postgresql/data


volumes:
  postgres_db_product:
    driver: local


networks:
  default:
    driver: bridge
